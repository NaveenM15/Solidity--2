// SPDX-License-Identifier: MIT
pragma solidity  >=0.8.0 <0.8.23;

// STRUCT IN SOLIDITY.........
// KEYWORD - struct.
// All data created in struct is stored in array.
contract Structs{
     struct Todo{
          string text;
          bool complete;
     }
     Todo[] public todos;
     function create(string memory _text)public{
         // 3 ways of intialize a struct
         // 1. calling it like a functio
         todos.push(Todo(_text,false));

        //  // 2. key- value mapping
        //  todos.push(Todo({text:_text,complete:false}));

        //  // 3. initialize and empty struct and then update it
        //  Todo memory todo;
        //  todo.text=_text;
        //  todos.push(todo);
     }
     function get(uint _index)public view returns(string memory,bool complete){
        Todo storage todo=todos[_index];
        return (todo.text,todo.complete);
     }
     function updatetext(uint _index,string memory _text) view  public{
         Todo memory todo=todos[_index];
         todo.text=_text;
     }
     function toggleCompleted(uint _index)view public{
          Todo memory todo=todos[_index];
          todo.complete=!todo.complete;
     }



     //SIMILAR TO ENUM TO ALSO USED IN EXTERNA CONTRACT ,
     // SO, IT CAN BE IMPORTED

     // import "./StructDeclaration.sol";

}

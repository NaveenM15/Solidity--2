// SPDX-License-Identifier: MIT
pragma solidity  >=0.8.0 <0.8.23;

// CONTRACT INHERITANCE USING CONSTRUCTOR..................
// executed only once.
// Every contract create constructor default.
contract x{
    string public name;
    constructor(string memory _name){
       name=_name;
    }
}
contract y{
    string public s;
    constructor(string memory _s){
        s=_s;
    }
}

// There are 2 ways to initialize parent contract with parameters.
// pass the parameters here in the inheritance list.
contract B is x("Input to X"),y("Input to Y"){
 
}
contract C is x,y{
    constructor(string memory _name,string memory _s)x(_name)y(_s){}
}
// parent constructors are always called in the order of inheritance
// regardless of the order of parent contracts listed in the 
//  constructor of the child contract.

contract D is x,y{
    constructor()x("x was called")y("y was called"){}
}


// SPDX-License-Identifier: MIT
pragma solidity  ^0.8.19;
contract Loops{
    // WHILE--------------------------------------------
    function add(uint n)public pure returns(uint){
        uint a;
        while(n<10){
            a+=2;
            n++;
        }
        return a;
    }
    uint[] arr;
    uint k=0;
    function getarray1()public returns(uint[] memory){
        while(k<5){
            k++;
            arr.push(k);
        }
        return arr;
    }
    function getarray1result()public view returns(uint[] memory){
        return arr;
    }
    //  DO WHILE---------------------------------------------
    uint[] a;
    uint x=0;
    function getarray2() public returns(uint[] memory){
    do{
       x++;
       a.push(x);
    }while(x<5);
    return a;
    }
    function getarray2result()public view returns(uint[] memory){
        return a;
    }
    // FOR---------------------------------------------------
    uint[] y;
    function getarray3()public returns(uint[] memory){
        for(uint i=1;i<=5;i++){
            y.push(i);
        }
        return y;
    }
    function getarray3result() public view returns(uint[] memory){
        return y;
    }

}

// SPDX-License-Identifier: MIT
pragma solidity  ^0.8.19;

// MAPPING.............................
// * Mapping always return a value.
// * if the value was never set, it will return the default value.

contract Mapping{
   // mapping(keytype => valuetype) visibility identifier;
    mapping(uint  => string ) person;
    function storevalue1(uint a,string memory s)public {
      person[a]=s;
    }
    function getvalue1(uint n)public view returns(string memory){
        return person[n];
    }

    // NESTED MAPPING..................
    // mapping(keytype => mapping(keytype => valuetype))public variable;
    mapping(uint => mapping(uint => string)) place;
    function storevalue2(uint a,uint b,string memory s)public {
      place[a][b]=s;
    }
    function getvalue2(uint a,uint b)public view returns(string memory){
        return place[a][b];
    }
    
    // MAPPING FROM ADDRESS TO UINT...........
    mapping(address => uint )public mymap;
    function get3(address addr)public view returns(uint){
        return mymap[addr];
    }
    function set(address addr,uint i)public{
        mymap[addr]=i;
    }
}
